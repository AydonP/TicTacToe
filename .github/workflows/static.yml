# Simple workflow for deploying static content to GitHub Pages
name: Build and Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: mymindstorm/setup-emsdk@v13
        with: 
          version: latest
          actions-cache-folder: 'emsdk-cache'
      - run: emcc -v
      - uses: tecolicom/actions-use-apt-tools@v1
        with:
          tools: 'cmake zip'
          cache: yes
      - run: ./configure.sh
      - run: ./build.sh
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - run: rm -rf out/src/CMakeFiles out/src/cmake_install.cmake
      - run: ls -lR out/src
      - run: zip public.zip out/*
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: './out/src'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: >-
          gh release create ${{ github.ref_name }}
          "public.zip"
          --generate-notes
          --title "Version ${tag#v}"
